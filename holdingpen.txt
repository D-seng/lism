    <div>
      <draggable
        class="dragArea"
        chosenClass="chosen"
        ghostClass="dropTarget"
        animation="250"
        bubbleScroll="true"
        tag="ul"
        handle=".handle"
        :list="clauses"
        :group="{ name: 'clauses', pull: 'clone', put: false }"
        @change="renumberHandler"
      >
        <li v-for="el in list" :key="el.section">
          <font-awesome-icon
            icon="grip-lines"
            class="fas fa-grip-lines fa-lg handle"
            @drop="addToStackHandler"
          />
          <font-awesome-icon
            icon="edit"
            class="fas fa-edit fa-lg"
            @click="editX(el.section, el.verbiage, el.id)"
          />
          <span class="listSpan"> {{ el.section }}</span>
          <span @click="getArr(el.id)" id="el.id" contenteditable="false">
            {{ el.verbiage }}
          </span>

          <!-- <div v-if="el.subsections.length > 0"> -->
          <NestedDraggable
            :list="el.subsections"
            @renumber-handler="renumberHandler"
            :ce="false"
            @show-editor="editX('subsequent')"
          />
          <!-- </div> -->
        </li>
      </draggable>
    </div>

     :group="{ name: 'lseAndFeeder', pull: 'clone', put: false }"

     cloneHandler(evt) {
      // debugger
      var pos
      var arrSec
      var k
      //RUN A SECTION FINDER, AS ON NESTEDEXAMPLE.VUE.
      console.log('this.feederMaster')
      console.log(this.feederMaster)

      if (this.singleMode) {
        if (this.sectionToClone.indexOf('.') === -1) {
          pos = this.feeder[this.sectionToClone]
        } else {
          k = 0
          arrSec = this.sectionToClone.split('.')
          pos = 'this.feederMaster[' + arrSec[0] + ']'
          for (k = 1; k < arrSec.length; k++) {
            pos = pos + '.subsections[' + (arrSec[k] - 1) + ']'
          }
        }

        // debugger
        console.log(pos)
        var fObj = eval(pos)
        console.log(fObj)

        var newObj = {
          id: fObj.id,
          section: fObj.section,
          verbiage: fObj.verbiage
        }
        if (this.singleMode) {
          newObj.subsections = []
        } else {
          newObj.subsections = fObj.subsections
        }
      }
      console.log(evt.clone)
      evt.clone = newObj
      console.log('evt.clone')
      console.log(evt.clone)
    },